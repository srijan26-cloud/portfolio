{"version":3,"sources":["img/srdp.jpeg","components/Home/Home.js","components/About/About.js","components/Projects/Projects.js","components/Contact/Contact.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","className","src","srdp","alt","href","class","aria-hidden","About","width","size","color","Projects","style","Contact","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.02388f0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/srdp.85c29604.jpeg\";","import './Home.css'\r\nimport srdp from './../../img/srdp.jpeg'\r\n\r\nconst Home = () => {\r\n        return (\r\n            <div className='Home'>\r\n                <div className='Container'>\r\n                    <img src={srdp} alt='srdp'/>\r\n                    <h1 className='Hello'>Srijan Chandra</h1>\r\n                    <h2>3<sup>rd</sup> year Undergraduate student</h2>\r\n                    <div className='Icons'>\r\n                        <a href='mailto:srijan.chandra26@gmail.com' >\r\n                        <i class=\"fa fa-envelope-open\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href='https://www.linkedin.com/in/srijan-chandra-26469b1a8/' >\r\n                        <i \r\n                            class=\"fa fa-linkedin\"\r\n                            aria-hidden=\"true\"\r\n                        \r\n                        ></i>\r\n                        </a>\r\n                        <a href='https://github.com/srijan26-cloud'>\r\n                        <i \r\n                            class=\"fa fa-github\" \r\n                            aria-hidden=\"true\"\r\n                        ></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Home\r\n","import './About.css'\r\n\r\nconst About = () => {\r\n        return (\r\n            <div className='About'>\r\n                <h2>About Me</h2>\r\n                <hr width='30' size='2' color='white'/>\r\n                <p>\r\n                    I'am a 3<sup>rd</sup> year undergraduate, currently persuing my Batchlor of Technology majoring in Information Technology from United College of Engineering and Research, which is directly affiliated to Dr. APJ Abdul Kalam Technical University,Lucknow.\r\n                </p>\r\n                <p>My interest lies in Web Development and fond of creating new front-end stuffs with Reactjs, as this portfolio site is one of the work.\r\n                   I believe that frontend development requires a creative mind for making a piece of work more attractive and indulging than ever. \r\n                </p>\r\n                <p>In my spare time I love to sketch, which gives me my own space and freedom to explore my creative thinking ability.</p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default About\r\n","import './Projects.css'\r\n\r\nconst Projects = () => {\r\n    \r\n        return (\r\n            <div className='Projects'>\r\n                <h2>Projects</h2>\r\n                <hr width='30' size='2' color='black'/>\r\n                <div>\r\n                    <p>\r\n                    <a href='https://github.com/srijan26-cloud/Spring-REST-API-'><h3><i class=\"fa fa-github\" aria-hidden=\"true\"></i>&nbsp;Rest API</h3></a>\r\n                    I wanted to make a RESTful API just to explore what it is all about. Then I came to know about Spring Boot Framework and Maven\r\n                    for making Restful APIs in java. So the project began with its structure which was deployed by Spring Initializer. Dependecy \r\n                    includes: Spring WEB, Spring JPA, Spring H2 Database, lombok. For Database H2 was used. I learned how and where to\r\n                    add annotations. It also helped me to know the different layers - Controller, Service, DAO layers with Exception Handler.\r\n                    </p>\r\n\r\n                    <p>\r\n                    <a href='https://github.com/srijan26-cloud/InQuesta'><h3><i class=\"fa fa-github\" aria-hidden=\"true\"></i>&nbsp;InQuesta - Chat App</h3></a>\r\n                    In this particular project, I learned how the Bidirectional communication takes place and how it is implemented. In this project, I used Nodejs,\r\n                    Express js, Socket.io for the communication to take place. For the Bidirectional communication to happen it's important\r\n                    and effective to use nodemon (node module) to send and receive messages without refreshing the page. For deployment I used heroku.\r\n                    <br />View the implementation live at : <a style={{color: \"blue\"}} href='https://inquesta.herokuapp.com/'>here</a>\r\n                    \r\n                    </p>\r\n\r\n                    <p>\r\n                    <a href='https://github.com/srijan26-cloud/Visualization'><h3><i class=\"fa fa-github\" aria-hidden=\"true\"></i>&nbsp;Sorting Visualization</h3></a>\r\n                    This project deals with the visualization of the sorting algorithms. It generally emphasizes\r\n                    on core subject DSA. It also implements the JavaScript ES6 for the real visualization.\r\n                    <br />View the implementation live at : <a style={{color: \"blue\"}} href='https://srijan26-cloud.github.io/Visualization/'>here</a>\r\n                    \r\n                    </p>\r\n\r\n                    <p>\r\n                    <a href='https://github.com/srijan26-cloud/Quiz'><h3><i class=\"fa fa-github\" aria-hidden=\"true\"></i>&nbsp;Quiz</h3></a>\r\n                    A multiple-choice question quiz game project using Trivia open-source API and TypeScript\r\n                    as a template for React.js. This project taught me how to use API and Object De-structuring.\r\n                    <br />View the implementation live at : <a style={{color: \"blue\"}} href='https://srijan26-cloud.github.io/Quiz/'>here</a>\r\n                    \r\n                    </p>\r\n\r\n                    <p>\r\n                    <a href='https://github.com/srijan26-cloud/Search-Images'><h3><i class=\"fa fa-github\" aria-hidden=\"true\"></i>&nbsp;Search Images</h3></a>\r\n                    A react project for integrating unsplash API and using Axios for managing POST and GET request for API and semantic UI as a frontend framework.\r\n                    <br />View the implementation live at : <a style={{color: \"blue\"}} href='https://srijan26-cloud.github.io/Search-Images/'>here</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n \r\n}\r\n\r\nexport default Projects\r\n","import './Contact.css'\r\n\r\nconst Contact = () => {\r\n        return (\r\n            <div className='Contact'>\r\n                <h2>Contact Me</h2>\r\n                <hr width='30' size='2' color='white'/>\r\n                \r\n                <p>\r\n                    <a href='mailto:srijan.chandra26@gmail.com' >\r\n                        <i class=\"fa fa-envelope-open\" aria-hidden=\"true\"></i>\r\n                        &nbsp;srijan.chadra26@gmail.com\r\n                        </a>\r\n                        <a href='javascript:void(0);' >\r\n                        <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\r\n                        &nbsp;9838254175\r\n                        </a>\r\n                        <a href='javascript:void(0);'>\r\n                        <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                        &nbsp;Prayagraj, Uttar Pradesh\r\n                        </a>\r\n                        \r\n                </p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Contact\r\n","import NavBar from \"./components/NavBar/NavBar\";\nimport Home from \"./components/Home/Home\";\nimport About from \"./components/About/About\";\nimport Projects from \"./components/Projects/Projects\";\nimport Contact from \"./components/Contact/Contact\";\nconst App = () => {\n  return (\n    <div >\n      \n      <Home />\n      <About />\n      <Projects />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}